FALSE,
0,
theta,
lambda,
sigma,
nclust,
tau,
block.size,
max.iter.harmony,
max.iter.cluster,
epsilon.cluster,
epsilon.harmony,
plot_convergence,
FALSE,
verbose,
reference_values
)
rownames(harmonyEmbed) <- row.names(embedding)
colnames(harmonyEmbed) <- paste0(reduction.save, "_", seq_len(ncol(harmonyEmbed)))
suppressWarnings({
harmonydata <- Seurat::CreateDimReducObject(
embeddings = harmonyEmbed,
stdev = as.numeric(apply(harmonyEmbed, 2, stats::sd)),
assay = assay.use,
key = reduction.save
)
})
object[[reduction.save]] <- harmonydata
if (project.dim) {
object <- Seurat::ProjectDim(
object,
reduction = reduction.save,
overwrite = TRUE,
assay = assay.use,
verbose = FALSE
)
}
return(object)
}
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony.Seurat(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "SCT")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony.Seurat(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
install.packages("harmony")
install.packages("harmony")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony.Seurat(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
#install.packages("devtools")
library(devtools)
#install.packages("RcppArmadillo")
#install_github("immunogenomics/harmony")
#install.packages("Seurat")
library(harmony)
library(dplyr)
library(Seurat)
library(cowplot)
library(ggplot2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony.Seurat(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
View(RunHarmony.Seurat)
View(RunHarmony.Seurat)
#install.packages("devtools")
library(devtools)
#install.packages("RcppArmadillo")
#install_github("immunogenomics/harmony")
#install.packages("Seurat")
library(harmony)
library(dplyr)
library(Seurat)
library(cowplot)
library(ggplot2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
install.packages("harmony")
install.packages("harmony")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
#install.packages("devtools")
library(devtools)
#install.packages("RcppArmadillo")
#install_github("immunogenomics/harmony")
#install.packages("Seurat")
library(harmony)
library(dplyr)
library(Seurat)
library(cowplot)
library(ggplot2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
Harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca")
traceback()
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "SCT")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
View(data)
View(cell_lines)
View(obj)
data@assays$RNA@scale.data <-
s
data@assays$RNA@scale.data <-1
View(panels)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", do.scale = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
View(data)
View(data)
?merge
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
View(data)
data@assays$RNA@scale.data <- c(panels[[1]]@assays$RNA@scale.data, panels[[2]]@assays$RNA@scale.data, panels[[3]]@assays$RNA@scale.data)
data@assays$RNA@scale.data <- merge(panels[[1]]@assays$RNA@scale.data, panels[[2]]@assays$RNA@scale.data, panels[[3]]@assays$RNA@scale.data)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- ScaleData(data, features = all.features)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- ScaleData(data)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype")
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
# harmonizedData <- data %>%
#   RunHarmony(group.by = "orig.identity", plot_convergence = TRUE)
# p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "orig.identity")
# p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "orig.identity", pt.size = .1)
# plot_grid(p1,p2)
View(data)
panels[["jurkrat"]]@assays[["RNA"]]@scale.data
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- ScaleData(data)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmony_embeddings, reduction = "harmony", pt.size = .1, group.by = "celltype")
View(obj)
View(cell_lines)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype")
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
# harmonizedData <- data %>%
#   RunHarmony(group.by = "orig.identity", plot_convergence = TRUE)
# p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "orig.identity")
# p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "orig.identity", pt.size = .1)
# plot_grid(p1,p2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("red", "blue", "orange"))
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
# harmonizedData <- data %>%
#   RunHarmony(group.by = "orig.identity", plot_convergence = TRUE)
# p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "orig.identity")
# p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "orig.identity", pt.size = .1)
# plot_grid(p1,p2)
View(harmonizedData)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "blue", "orange"))
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
# harmonizedData <- data %>%
#   RunHarmony(group.by = "orig.identity", plot_convergence = TRUE)
# p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "orig.identity")
# p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "orig.identity", pt.size = .1)
# plot_grid(p1,p2)
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "red", "orange"))
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:2){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "red", "orange"))
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "red", "orange"))
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "red", "orange"), label = TRUE)
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
data <- NULL
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NULL
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- harmony::merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
data <- NormalizeData(data)
all.features <- rownames(data)
# data <- ScaleData(data, features = all.features)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca", merge.data = TRUE)
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
# data <- NormalizeData(data)
# all.features <- rownames(data)
# data <- ScaleData(data, features = all.features)
data <- ScaleData(data)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
# data <- NormalizeData(data)
# all.features <- rownames(data)
# data <- ScaleData(data, features = all.features)
data <- ScaleData(data)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
p1 <- DimPlot(object = harmonizedData, reduction = "harmony", pt.size = .1, group.by = "celltype", cols = c("black", "red", "orange"), label = TRUE)
p2 <- VlnPlot(object = harmonizedData, features = "harmony_1", group.by = "celltype", pt.size = .1)
plot_grid(p1,p2)
?xfun
devtools::build(binary = FALSE)
library(Cellchat)
install.packages('CellChat')
library(CellChat)
library(devtoos)
library(devtools)
devtools::install_github("sqjin/CellChat")
library(BiocManager)
BiocManager::install("ComplexHeatmap")
View(harmonizedobj)
View(harmonizedobj)
#install.packages("devtools")
library(devtools)
#install.packages("RcppArmadillo")
#install_github("immunogenomics/harmony")
#install.packages("Seurat")
library(harmony)
library(dplyr)
library(Seurat)
library(cowplot)
library(ggplot2)
data <- panels[[1]]
metadata_list <- NULL
for(x in 1:length(panels)){
if(x != 1){
data <- merge(data, panels[[x]], merge.dr = "pca")
}
metadata_list <- c(metadata_list, rep(names(panels)[x], ncol(panels[[x]])))
}
# data <- NormalizeData(data)
# all.features <- rownames(data)
# data <- ScaleData(data, features = all.features)
data <- ScaleData(data)
data$celltype <- metadata_list
harmonizedData <- data %>%
harmony::RunHarmony(group.by = "celltype", plot_convergence = TRUE, reduction = "pca", assay.use = "RNA")
export_data_from_seurat(harmonizedData, "output")
#install.packages("devtools")
library(devtools)
#install.packages("RcppArmadillo")
#install_github("immunogenomics/harmony")
#install.packages("Seurat")
library(harmony)
library(dplyr)
library(Seurat)
library(cowplot)
library(ggplot2)
library(DropletUtils)
install.packages('droptestUtils')
install.packages('DroptestUtils')
install.packages('DropletUtils')
save_it <- function(fileName){
saveRDS(pbmc, file = fileName)
print("Saved file!")
return(pbmc)
}
save_it <- function(object, fileName){
saveRDS(object, file = fileName)
print("Saved file!")
return(object)
}
save_it <- function(object, fileName){
saveRDS(object, file = fileName)
print("Saved file!")
return(object)
}
save_it(harmonizedData, "output.rds")
p <- readRDS("/Users/justinlee/Downloads/harmonized_data.rds")
p <- readRDS("/Users/justinlee/Downloads/harmonized_data.rds")
p == harmonizedData
View(p)
View(harmonizedData)
View(p)
View(harmonizedData)
